---
import { ClientRouter } from 'astro:transitions';

export interface Props {
  title: string;
  canonicalURL?: string | URL;
  description: string;
  date?: string;
  image?: string;
  tags?: string[];
  type?: string;
}

const { canonicalURL, date, description, image, tags, title, type } =
  Astro.props as Props;

const keywords = tags?.join(', ');
---

<!-- Common -->
<meta charset="UTF-8" />
<ClientRouter />

<!-- <meta name="view-transition" content="same-origin" /> -->
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>{title} | Ship Shape</title>
<meta name="description" content={description} />
<meta name="referrer" content="unsafe-url" />
<meta name="generator" content={Astro.generator} />

<!-- Sitemap -->
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- Favicon -->
<link rel="icon" type="image/x-icon" href="/favicon.ico" />

<!-- SEO -->
<link rel="canonical" href={canonicalURL} />

<!-- OpenGraph -->
<meta property="og:site_name" content="Ship Shape" />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
{type && <meta property="og:type" content={type} />}
{
  image && (
    <>
      <meta property="og:image" content={new URL(image, canonicalURL)} />
      <meta property="og:image:type" content="image/png" />
      <meta property="og:image:width" content="256" />{' '}
      <meta property="og:image:height" content="256" />
    </>
  )
}

<!-- Twitter -->
<meta name="twitter:card" content="summary" />
<meta name="twitter:description" content={description} />
<meta name="twitter:title" content={title} />
<meta name="twitter:url" content={canonicalURL} />
{image && <meta name="twitter:image" content={image} />}

{
  keywords && (
    <>
      <meta name="twitter:label2" content="Filed under" />
      <meta name="twitter:data2" content={keywords} />
    </>
  )
}

<!-- Article -->
{date && <meta property="article:published_time" content={date} />}

{tags && tags.map((tag) => <meta property="article:tag" content={tag} />)}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "SoftwareApplication",
    "name": "Swach",
    "applicationCategory": "https://schema.org/DesignApplication",
    "operatingSystem": "macOS 10.14+, Windows 10, Ubuntu 18.04+",
    "featureList": "Color picker, contrast checker, color palettes, color harmonies",
    "offers": {
      "@type": "Offer",
      "price": "0"
    },
    "publisher": {
      "@type": "Organization",
      "legalName": "Ship Shape Consulting LLC"
    }
  }
</script>
